{"version":3,"sources":["input.jsx","app.jsx","index.js"],"names":["GuessInput","this","props","index","value","onChange","check","placeholder","className","type","e","target","Component","App","words","data","state","guesses","map","_","allOK","forEach","g","i","setState","trigger","setTimeout","c","v","alert","handleInputChange","key","title","text","id","onClick","renderInput","ReactDOM","render","document","getElementById"],"mappings":"uuBAIaA,G,MAAb,uKACY,IAAD,EACmCC,KAAKC,MAAvCC,EADD,EACCA,MAAOC,EADR,EACQA,MAAOC,EADf,EACeA,SAAUC,EADzB,EACyBA,MAC1BC,EAAwB,UAAVD,EAAoB,kBAAoB,GAC5D,OACE,yBAAKE,UAAW,mBAAqBF,GACnC,yBAAKE,UAAW,eAAiBF,GAC/B,2BAAIH,EAAJ,MAEF,yBAAKK,UAAW,eAAiBF,GAC/B,2BAAOG,KAAK,OAAOL,MAAOA,EACxBG,YAAaA,EACbF,SAAU,SAACK,GAAD,OAAOL,EAASK,EAAEC,OAAOP,gBAZ/C,GAAgCQ,c,OCEnBC,G,MAAb,kDACE,WAAYX,GAAQ,IAAD,sBACjB,cAAMA,GADW,IAETY,EAAUC,EAAVD,MAFS,OAGjB,EAAKE,MAAQ,CACXC,QAASH,EAAMI,KAAI,SAAAC,GAAC,MAAI,MACxBb,MAAOQ,EAAMI,KAAI,SAAAC,GAAC,MAAI,aALP,EADrB,oDAUW,IAAD,OACEH,EAAUf,KAAVe,MACAF,EAAUC,EAAVD,MACJM,GAAQ,EACNd,EAAQ,GAAIW,EAAU,GAC5BD,EAAMC,QAAQI,SAAQ,SAACC,EAAGC,GAEpBD,IADMR,EAAMS,IAEdjB,EAAMiB,GAAK,KACXN,EAAQM,GAAKD,IAEbhB,EAAMiB,GAAK,QACXN,EAAQM,GAAK,GACbH,GAAQ,MAGZnB,KAAKuB,SAAS,CAAElB,QAAOW,YACnBG,EACFnB,KAAKwB,UAELC,YAAW,WACT,IAAMpB,EAAQ,EAAKU,MAAMV,MAAMY,KAAI,SAAAS,GAAC,MAAU,OAANA,EAAa,KAAO,YAC5D,EAAKH,SAAL,2BAAmB,EAAKR,OAAxB,IAA+BV,aAC9B,OAjCT,wCAoCoBsB,EAAGL,GAAI,IACfP,EAAUf,KAAVe,MACFC,EAAO,YAAOD,EAAMC,SACpBX,EAAK,YAAOU,EAAMV,OACxBW,EAAQM,GAAKK,EACbtB,EAAMiB,GAAK,SACXtB,KAAKuB,SAAS,CAAElB,QAAOW,cA1C3B,gCA8CIY,MAAM,gBA9CV,kCAiDcP,EAAGC,GAAI,IAAD,OACRjB,EAAUL,KAAKe,MAAfV,MACR,OAAO,kBAAC,EAAD,CACLF,MAAOkB,EACPhB,MAAOA,EAAMiB,GACbpB,MAAOoB,EAAI,EACXlB,SAAU,SAAAuB,GAAC,OAAI,EAAKE,kBAAkBF,EAAGL,IACzCQ,IAAKR,MAxDX,+BA4DY,IAAD,OACCS,EAAgBjB,EAAhBiB,MAAOC,EAASlB,EAATkB,KACPhB,EAAYhB,KAAKe,MAAjBC,QACR,OACE,yBAAKT,UAAU,iBACb,yBAAKA,UAAU,eACf,yBAAKA,UAAU,MAAM0B,GAAG,QACtB,4BAAKF,GACL,2BAAIC,GACJ,4BAAQxB,KAAK,SAASD,UAAU,MAC9B0B,GAAG,eAAeC,QAAS,kBAAM,EAAK7B,UADxC,aAICW,EAAQC,KAAI,SAACI,EAAGC,GAAJ,OAAU,EAAKa,YAAYd,EAAGC,OAE7C,yBAAKf,UAAU,oBA3EvB,GAAyBI,c,MCAzByB,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.2bbb05c2.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport './input.css'\n\n\nexport class GuessInput extends Component {\n  render() {\n    const { index, value, onChange, check } = this.props\n    const placeholder = check === \"wrong\" ? \"Palavra errada!\" : \"\" \n    return (\n      <div className={\"guess container \" + check}>\n        <div className={\"guess label \" + check}>\n          <p>{index}:</p>\n        </div>\n        <div className={\"guess input \" + check}>\n          <input type=\"text\" value={value}\n            placeholder={placeholder}\n            onChange={(e) => onChange(e.target.value)} />\n        </div>\n      </div>\n    )\n  }\n}","import React, { Component } from 'react'\nimport { GuessInput } from './input'\nimport data from './data.json'\nimport './app.css'\n\n\nexport class App extends Component {\n  constructor(props) {\n    super(props)\n    const { words } = data\n    this.state = {\n      guesses: words.map(_ => \"\"),\n      check: words.map(_ => \"typing\")\n    }\n  }\n\n  check() {\n    const { state } = this\n    const { words } = data\n    let allOK = true\n    const check = [], guesses = []\n    state.guesses.forEach((g, i) => {\n      const w = words[i]\n      if (g === w) {\n        check[i] = \"ok\"\n        guesses[i] = g\n      } else {\n        check[i] = \"wrong\"\n        guesses[i] = \"\"\n        allOK = false\n      }\n    })\n    this.setState({ check, guesses })\n    if (allOK)\n      this.trigger()\n    else\n      setTimeout(() => {\n        const check = this.state.check.map(c => c === \"ok\" ? \"ok\" : \"typing\")\n        this.setState({ ...this.state, check })\n      }, 2000)\n  }\n\n  handleInputChange(v, i) {\n    const { state } = this\n    const guesses = [...state.guesses]\n    const check = [...state.check]\n    guesses[i] = v\n    check[i] = \"typing\"\n    this.setState({ check, guesses })\n  }\n\n  trigger() {\n    alert(\"PARABAINS!\")\n  }\n\n  renderInput(g, i) {\n    const { check } = this.state\n    return <GuessInput\n      value={g}\n      check={check[i]}\n      index={i + 1}\n      onChange={v => this.handleInputChange(v, i)}\n      key={i}\n    />\n  }\n\n  render() {\n    const { title, text } = data\n    const { guesses } = this.state\n    return (\n      <div className=\"app container\">\n        <div className=\"app spacer\" />\n        <div className=\"app\" id=\"pane\">\n          <h1>{title}</h1>\n          <p>{text}</p>\n          <button type=\"button\" className=\"app\"\n            id=\"check-button\" onClick={() => this.check()}>\n            Verificar\n          </button>\n          {guesses.map((g, i) => this.renderInput(g, i))}\n        </div>\n        <div className=\"app spacer\" />\n      </div>\n    )\n  }\n}","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { App } from './app'\nimport './index.css'\n\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n"],"sourceRoot":""}